## Postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/tlg_bot
spring.datasource.sql-script-encoding=UTF-8
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database=POSTGRESQL
spring.jpa.generate-ddl=true
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.connection.characterEncoding=utf-8
spring.jpa.properties.hibernate.connection.useUnicode=true
spring.jpa.properties.hibernate.connection.CharSet=utf-8
spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**
spring.mvc.static-path-pattern=/resources/**
spring.servlet.multipart.max-request-size=-1
spring.servlet.multipart.max-file-size=-1
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8
server.port=8888

# Батчинг (пакетная обработка).
# Пакетная обработка позволяет нам отправлять группу операторов SQL в
# базу данных за один вызов. Таким образом, мы можем оптимизировать
# использование сети и памяти нашего приложения. Без батчинга Hibernate
# сохраняет сущности по одной.
# !!! Если наши объекты используют генератор идентификаторов
# GenerationType.IDENTITY, Hibernate автоматически отключит
# пакетные сохранения / обновления. Поэтому у сущностей должен
# быть @GeneratedValue(strategy = GenerationType.SEQUENCE) !!!
# Укажем Hibernate, чтобы накапливал в persistence context, например,
# 5 сущностей и сохранял их одним пакетом в ходе одного обращения к БД:
spring.jpa.properties.hibernate.jdbc.batch_size=5
# Пакетное сохранение для нескольких разных сущностей:
spring.jpa.properties.hibernate.order_inserts=true
# Активация батчинга для внесения изменений в сущности:
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true


## MySQL
#spring.datasource.url = jdbc:mysql://localhost:3306/tlg_bot?serverTimezone=Europe/Moscow&verifyServerCertificate=false&useSSL=true&useUnicode=true&characterEncoding=utf8
#spring.datasource.username = root
#spring.datasource.password = root
#spring.jpa.database-platform = telegramApp.configuration.MySQL5DialectConfig
#spring.jpa.hibernate.ddl-auto=create-drop
#server.port=8888
#spring.jpa.properties.hibernate.connection.characterEncoding=utf-8
#spring.jpa.properties.hibernate.connection.CharSet=utf-8
#spring.jpa.properties.hibernate.connection.useUnicode=true
